rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(col.time[length(col.time)] - col.time[1])
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
} else {
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.time <- as.numeric(col.time[i + 1] - col.time[i])
if(time.measure == dif.time){
dif.variable <- col.variable[i + 1] - col.variable[i]
values[i] <- sqrt(dif.time^2 + dif.variable^2)
} else {
next
}
}
longitudCurva <- sum(values, na.rm = T)
rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(col.time[length(col.time)] - col.time[1])
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
}
}
library(tidyr)
library(dplyr)
x <- read.csv("datos_prueba/temp_soil.csv", header = T, sep = ";", dec = ",",
colClasses = c("character", "numeric", "numeric", "numeric"))
x <- gather(x, key = "depth_level", value = "temp", 2:4)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = T,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = T,
cal.GVI = T)
)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = T,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = T,
cal.GVI = F)
)
x$Fecha[2] - x$Fecha[1]
x$Fecha - x$Fecha
View(x)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = T,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = T,
cal.GVI = F)
)
x$Fecha <- lubridate::as_datetime(x$Fecha, format = "%Y-%m-%d %H:%M:%S")
head(x)
x$Fecha[2] - x$Fecha[1]
as.numeric(x$Fecha[2] - x$Fecha[1])
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = T,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = T,
cal.GVI = F)
)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = T,
cal.GVI = F)
)
col.variable <- x$temp[x$depth_level == "Prof.1"]
col.time <- x$Fecha[x$depth_level == "Prof.1"]
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.time <- as.numeric(col.time[i + 1] - col.time[i])
if(time.measure == dif.time){
dif.variable <- col.variable[i + 1] - col.variable[i]
values[i] <- sqrt(dif.time^2 + dif.variable^2)
} else {
next
}
}
for(i in indexs){
dif.variable <- col.variable[i + 1] - col.variable[i]
dif.time <- is.numeric(col.time[i + 1] - col.time[i])
values[i] <- sqrt(dif.time^2 + dif.variable^2)
}
values
longitudCurva <- sum(values, na.rm = T)
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.variable <- col.variable[i + 1] - col.variable[i]
dif.time <- as.numeric(col.time[i + 1] - col.time[i])
values[i] <- sqrt(dif.time^2 + dif.variable^2)
}
longitudCurva <- sum(values, na.rm = T)
longitudCurva
values
dif.time
col.time
col.time[3] - col.time[2]
as.numeric(col.time[3] - col.time[2])
lubridate::minute(col.time[3] - col.time[2])
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
include.all = F,
cal.GVI = F)
)
col.time[3] - col.time[2]
a <- col.time[3] - col.time[2]
a
a
class(a)
difftime(col.time[3] - col.time[2], units = "mins")
difftime(a, units = "mins")
difftime(col.time[3], col.time[2], units = "mins")
as.numeric(difftime(col.time[3], col.time[2], units = "mins"))
?difftime
as.numeric(difftime(col.time[3], col.time[2]))
long.curve <- function(col.variable,
col.time,
convert.toDate = FALSE,
format.date,
time.measure,
units.time,
include.all = FALSE,
cal.GVI = FALSE){
# Primer paso ----
## Si hace falta, transformar la fecha en el formato deseado
if(convert.toDate == T){
col.time <- lubridate::as_datetime(col.time,
format = format.date)
}
# Segundo paso ----
## Ordenar los datos de más antiguo a más reciente
if(is.unsorted(col.time)){ # Importante comprobar antes si estan o no ordenados
indices <- order(col.time) # Ordenamos la variable tiempo y almacenamos los índices en un nuevo vector
col.time <- col.time[indices] # Actualizamos la variable tiempo
col.variable <- col.variable[indices] # Ordenamos también la variable de interés, para que mantener el dataset inicial
rm(indices)
}
# Tercer paso ----
## Determinar si incluimos todos los segmentos en el cálculo o no
if(include.all == T){
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.variable <- col.variable[i + 1] - col.variable[i]
dif.time <- as.numeric(difftime(col.time[i + 1], col.time[i], units = units.time))
values[i] <- sqrt(dif.time^2 + dif.variable^2)
}
longitudCurva <- sum(values, na.rm = T)
rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(difftime(col.time[length(col.time)], col.time[1], units = units.time))
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
} else {
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.time <- as.numeric(difftime(col.time[i + 1], col.time[i], units = units.time))
if(time.measure == dif.time){
dif.variable <- col.variable[i + 1] - col.variable[i]
values[i] <- sqrt(dif.time^2 + dif.variable^2)
} else {
next
}
}
longitudCurva <- sum(values, na.rm = T)
rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(difftime(col.time[length(col.time)], col.time[1], units = units.time))
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
}
}
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
units.time = "mins",
include.all = F,
cal.GVI = F)
)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
units.time = "mins",
include.all = T,
cal.GVI = F)
)
library(tidyr)
library(dplyr)
x <- read.csv("datos_prueba/temp_soil.csv", header = T, sep = ";", dec = ",",
colClasses = c("character", "numeric", "numeric", "numeric"))
x <- gather(x, key = "depth_level", value = "temp", 2:4)
long.curve <- function(col.variable,
col.time,
convert.toDate = FALSE,
format.date,
time.measure,
units.time,
include.all = FALSE,
cal.GVI = FALSE){
# Primer paso ----
## Si hace falta, transformar la fecha en el formato deseado
if(convert.toDate == T){
col.time <- lubridate::as_datetime(col.time,
format = format.date)
}
# Segundo paso ----
## Ordenar los datos de más antiguo a más reciente
if(is.unsorted(col.time)){ # Importante comprobar antes si estan o no ordenados
indices <- order(col.time) # Ordenamos la variable tiempo y almacenamos los índices en un nuevo vector
col.time <- col.time[indices] # Actualizamos la variable tiempo
col.variable <- col.variable[indices] # Ordenamos también la variable de interés, para que mantener el dataset inicial
rm(indices)
}
# Tercer paso ----
## Determinar si incluimos todos los segmentos en el cálculo o no
if(include.all == T){
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.variable <- col.variable[i + 1] - col.variable[i]
dif.time <- as.numeric(difftime(col.time[i + 1], col.time[i], units = units.time))
values[i] <- sqrt(dif.time^2 + dif.variable^2)
}
longitudCurva <- sum(values, na.rm = T)
rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(difftime(col.time[length(col.time)], col.time[1], units = units.time))
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
} else {
values <- c()
indexs <- seq(1, length(col.variable) - 1, 1)
for(i in indexs){
dif.time <- as.numeric(difftime(col.time[i + 1], col.time[i], units = units.time))
if(time.measure == dif.time){
dif.variable <- col.variable[i + 1] - col.variable[i]
values[i] <- sqrt(dif.time^2 + dif.variable^2)
} else {
next
}
}
longitudCurva <- sum(values, na.rm = T)
rm(values, dif.variable, dif.time, i)
if(cal.GVI == T){
dif.variable <- col.variable[length(col.variable)] - col.variable[1]
dif.time <- as.numeric(difftime(col.time[length(col.time)], col.time[1], units = units.time))
value <- sqrt(dif.time^2 + dif.variable^2)
print(longitudCurva/value)
} else {
print(longitudCurva)
}
}
}
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
units.time = "mins",
include.all = T,
cal.GVI = F)
) -> temp
View(temp)
library(ggplot2)
ggplot(x, x = Fecha, y = temp)+
geom_point()+
geom_line()+
facet_wrap(~depth_level)
ggplot(x, aes(x = Fecha, y = temp))+
geom_point()+
geom_line()+
facet_wrap(~depth_level)
ggplot(x, aes(x = Fecha, y = temp))+
geom_point()+
geom_line(group = depth_level)+
facet_wrap(~depth_level)
ggplot(x, aes(x = Fecha, y = temp))+
geom_point()+
geom_line(group = 1)+
facet_wrap(~depth_level)
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = Fecha, y = temp))+
geom_point()+
geom_line(group = 1)
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = Fecha, y = temp))+
geom_point()+
geom_line(group = 1)+
scale_x_datetime(date_breaks = "hour")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = Fecha, y = temp))+
geom_point()+
geom_line(group = 1)+
scale_x_datetime(date_breaks = "min")
View(temp)
View(x)
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_Datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
scale_x_datetime(date_breaks = "min")
rlang::last_trace()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
scale_x_datetime(date_breaks = "min")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Registro", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Registro", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour", date_labels = "hour")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Registro", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour", date_labels = "%H")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Registro", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour", date_labels = "%H:%M")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Registro", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour", date_labels = "%H")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour", date_labels = "%H")
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
View(temp)
x%>%
group_by(depth_level)%>%
summarise(lcd = long.curve(col.variable = temp,
col.time = Fecha,
convert.toDate = F,
format.date = "%Y-%m-%d %H:%M:%S",
time.measure = 30,
units.time = "mins",
include.all = F,
cal.GVI = F)
) -> temp
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(label = "LdC = 1350.22", x = 2, y = 15)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(label = "LdC = 1350.22", x = 2, y = 2)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(label = "LdC = 1350.22", x = .2, y = 2)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(label = "LdC = 1350.22", x = .2, y = 10)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(aes(label = "LdC = 1350.22"), x = .2, y = 10)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(aes(label = "LdC = 1350.22"), x = 5, y = 10)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
x%>%
filter(depth_level == "Prof.1")%>%
ggplot(aes(x = lubridate::as_datetime(Fecha, format = "%Y-%m-%d %H:%M:%S"), y = temp))+
geom_point()+
geom_line(group = 1)+
geom_label(aes(label = "LdC = 1350.22"),
x = 5, y = 10, inherit.aes = F)+
geom_label(label = "LdC = 660", x = 2, y = 10)+
labs(x = "Horas", y = "Temperatura ºC")+
scale_x_datetime(date_breaks = "hour",
date_labels = "%H") +
theme_linedraw()
